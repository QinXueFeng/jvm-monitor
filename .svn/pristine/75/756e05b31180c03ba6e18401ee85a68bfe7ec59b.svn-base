package com.andaily.service.operation.job;

import com.andaily.domain.shared.BeanProvider;
import com.andaily.service.ThreadInstanceService;
import org.quartz.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * The Job is concurrently
 * <p/>
 * 每一次监控的 定时任务处理
 *
 * @author Shengzhao Li
 */
@DisallowConcurrentExecution
public class ThreadInstanceJob implements Job {

    private static final Logger LOGGER = LoggerFactory.getLogger(ThreadInstanceJob.class);
   

    public static final String THREAD_INSTANCE_GUID="threadInstance";
    private transient ThreadInstanceService instanceService = BeanProvider.getBean(ThreadInstanceService.class);

    public ThreadInstanceJob() {
    }

    /*
    * 每次的监控会将 以下代码执行一次
    * */
    @Override
    public void execute(JobExecutionContext context) throws JobExecutionException {
        final JobKey key = context.getJobDetail().getKey();
        LOGGER.debug("*****  Start execute Job [{}]", key);

        final String instanceGuid = context.getMergedJobDataMap().getString(THREAD_INSTANCE_GUID);
        instanceService.executePerHeartBeatByInstanceGuid(instanceGuid);

        LOGGER.debug("&&&&&  End execute Job [{}]", key);
    }
}